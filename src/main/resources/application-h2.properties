# In addition, Spring Boot processes the schema-${platform}.sql and data-${platform}.sql
# files (if present), where platform is the value of spring.datasource.platform.
# This allows you to switch to database-specific scripts if necessary.
# For example, you might choose to set it to the vendor name of the
# database (hsqldb, h2, oracle, mysql, postgresql, and so on).

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.datasource.initialize=true
spring.datasource.platform=h2
spring.datasource.continue-on-error=true
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Enabling H2 Console. http://www.springboottutorial.com/spring-boot-and-spring-jdbc-with-h2
spring.h2.console.enabled=true


#Spring Boot automatically creates the schema of an embedded DataSource.
#This behavior can be customized by using the spring.datasource.initialization-mode
#property (and it can also be always or never).
spring.datasource.initialization-mode=always
